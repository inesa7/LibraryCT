

08/13 

1. interview prep materials 

==============
Agenda: 
STLC + bug severity & priority levels 


STLC = testing life cycle = when you have a story, tell me your steps to test it == how to test a pen? umbrella? car? etc 

stlc steps: 

req analyze : expect req from the client / PO to understand the function 
              test UI? test DB? Test API? 

test plan doc : test schedule / scope of testing (list of the testing types you perform) , resources , approval , responsibilities , risk & mitigation 

test case doc : doc -> qa -> positive & negative test cases

                test case ID -> Test Data -> test steps -> test description / scenario -> test environment -> pre-condition -> expected result 

env setup : QA environment 

test execution : performance testing 
                perform UI manual testing ->  with jira-> create Test Execution 
                perform UI automation -> Java + selenium + junit + maven + cucumber

                expected result vs Actual result 

                bug -> bug life cycle 

                bug life cycle: standard steps to handle / track a bug 
                    
                    QA find a NEW bug 
                    QA assign the bug report to someone -> Developer , QA lead, PO/BA
                    Dev OPEN the bug 

                    1. FIXED  -> QA Re-Test (testing again make sure the bug is removed)  

                    2.reject -> 2.1 -> duplicated 
                                2.2 -> invalid bug 

                    3. Deferred -> postpone / delayed  -> QA re-test 

test closing 

========================
Vending machine -> how do you test it  ?

- first of all, I need to understand the req clearly. and analyze the req then think about what to test? 
   - make a payment function ?
   - getting an object ? 

- test plan -> I will create a test plan doc with test schedule / scope of testing (list of the testing types you perform) , resources , responsibilities , risk & mitigation 

- test cases -> I definitely prepare both positive & negative test cases 
       - for example some scenarios: 
           - does the machine accept cash? 
                - 1,2,5,10,20, 100 

           - does it accept coins? 

           - credit card payment is allowed? 

           test case #1: 
           test scenario: user pay with cash 
           pre-condition: machine should work well , has items inside, plugged in 
           test data: $1 2 5 10 20 100 
           test environment : the vending machine
           test steps: 1. select an item 
                       2. enter the cash 
                       3. verify that the machine accept the money  
       
- then I will make sure my environment is set up. 

- now I start my testing / I start execute my test cases by comparing the expected result and actual result. 

       if expected and actual results are match, then my test is done 

       if expected and actual results are not match, I consider it is a bug , then I create a bug report , the bug will be handle based on Bug Life Cycle. 

=================================

Bug levels: 

1. severity level -> decided by QA 
        - Critical 
        - high 
        - medium 
        - low 
                     
       how much does this bug effecting the other function of the app?
        
        e.g 1: grammar error / bug -> since this bug is not effecting the other functions, severity level is Low 

        e.g 2: user cannot type a word in text message box 
               - high level (since the app is working well)
       
        e.g 3: user cannot login to the app, so it is Critical level 
              - 404 not found

        e.g 4: file upload is not working -> medium / high level 

2. priority level -> decided by either just developers, or developers & PO together

             when to fix the bug? how urgent to fix it? 

              critical level -> fix the bug immediately 
              high level     -> fix the bug within the sprint 
              medium level   ->   fix the bug within a month / 2 sprints 
              low level     -> fix the bug within the release 

in some company, QA defines the both severity & priority levels, but eventually its decided by dev & PO. 


expected : The task title is not specified.

actual : The task name is not specified.

-----------------

scenarios :
1. all users create tasks successfully 
2. create a task without title -> The task tile is not specified.
3. cancel a task 

jira issues: 

requirement -> story 

doc -> Test (test case)
       bug 

manual testing -> Test execution 


1 story -> 3 test cases -> 1 test execution 
            test20 -> fails
            test21
            test22

since I fund a bug from my test case, I will create a bug ticket, and move to another user story to work on. 


































