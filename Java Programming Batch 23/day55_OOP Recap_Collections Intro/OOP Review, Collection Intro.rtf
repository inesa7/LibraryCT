{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf840
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red207\green214\blue228;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\cssrgb\c84706\c87059\c91373;}
\margl1440\margr1440\vieww17320\viewh10240\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 09/16/2021\
\
Topics: OOP Review\
		Collection Intro\
\
\
package name: day55_OOPRecap_CollectionIntro\
\
\
OOP: design pattern of the applications in organized and modular way\
	\
	Encapsulation, Inheritance, Abstraction, Polymorphism\
\
	Encapsulation (POJO): hiding the data by using private.\
						  generate public getter/setter instance methods\
\
						 getter (read ONLY)\
\
						 setter (write ONLY)\
\
						 IF PRIVATE DATA IS FINAL, WE CAN NOT GENERATE SETTER\
\
\
 	Inheritance (TestBase & BasePage) : building parent & child relationships between classes\
\
 						child class: inherits all the variables & methods from parent class\
\
 						parent class: does not inherit anything from child\
\
 				advantages:\
 					easy to maintain\
 					improves the reusability\
 					less codes\
 					less memory\
\
\
	 		abstract TestBase\
	 				driver\
				setUp (@BeforeEach):\
					setup driver\
					open the browser\
					implicit wait\
					maximize browser\
					\
\
				tearDown (@AfterEach):\
					quit\
\
\
			TestClass1 extends TestBase\
\
				@Test (verify the title)\
					driver.getTitle\
\
\
			TestClass2 extends TestBase\
\
			TestClass3 extends TestBase\
\
\
\
	Abstraction (TestBase): focus on important things without worrying about the details\
\
				abstract method: method without the body\
								 meant to be overridden\
\
				2 ways:\
					1. abstract class: not concrete ==> no objects, meant to be parent\
\
								class can extends one abstract class\
\
					2. interface: not a class. meant to be implemented\
\
									PUBLIC is the only access modifier we can have\
\
							class can implement multiple interfaces\
\
							can not have:\
								instance variables\
								instance methods\
								constructor\
								blocks\
\
							can have:\
								final static variable\
								abstract method\
								static method\
								default method\
\
\
				WebDriver:\
\
						get(URL);\
\
				Interfaces that I have used:\
						WebDriver, WebElement, TakeScreenShot, JavaScriptExecuter...\
						List\
\
\
	Polymorphism (WebDriverFactory): behaviors of the objects in many forms\
\
\
		WebDriverFactory\
\
			WebDriver getDriver(name)\{\
				expect to return:\
					1. Chrome\
					2. FireFox\
					3. Opera\
					4. Safari\
			\}\
\
\
			WebDriver driver = WebDriverFactory.getDriver(name);\
			( (TakeScreenShot)driver ).takeScreenShot();\
			( (JavaScriptExecuter)driver ).executerScript();\
\
\
Data Structures: work with data\
\
		- Array (size is fixed, can be multi-dimensional, supports both primitive and 					non-primitives)\
		- Collection\
		- Map\
\
\
Collection framework: consists of multiple interfaces, each interface is implemented by classes\
\
	Collection (I): Dynamic sized\
					supports non-primitives ONLY\
					extended by List, Set, Queue\
\
\
			- List (I): has index numbers,\
\
			- Set (I): does not have index\
\
			- Queue (I): does not have index}